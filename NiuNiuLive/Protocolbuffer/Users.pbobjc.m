// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Users.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Users.pbobjc.h"
 #import "Response.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - UsersRoot

@implementation UsersRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - UsersRoot_FileDescriptor

static GPBFileDescriptor *UsersRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"live"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum Gender

GPBEnumDescriptor *Gender_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "GenderUnknown\000GenderMale\000GenderFemale\000";
    static const int32_t values[] = {
        Gender_GenderUnknown,
        Gender_GenderMale,
        Gender_GenderFemale,
    };
    static const char *extraTextFormatInfo = "\003\000\r\000\001\n\000\002\014\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(Gender)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:Gender_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL Gender_IsValidValue(int32_t value__) {
  switch (value__) {
    case Gender_GenderUnknown:
    case Gender_GenderMale:
    case Gender_GenderFemale:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UserLevel

@implementation UserLevel

@dynamic experiencePoint;
@dynamic level;
@dynamic rank;
@dynamic nextLevelExperiencePoint;
@dynamic nextLevelGetGoldCoins;

typedef struct UserLevel__storage_ {
  uint32_t _has_storage_[1];
  int32_t level;
  NSString *rank;
  int64_t experiencePoint;
  int64_t nextLevelExperiencePoint;
  int64_t nextLevelGetGoldCoins;
} UserLevel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "experiencePoint",
        .dataTypeSpecific.className = NULL,
        .number = UserLevel_FieldNumber_ExperiencePoint,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserLevel__storage_, experiencePoint),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = UserLevel_FieldNumber_Level,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserLevel__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rank",
        .dataTypeSpecific.className = NULL,
        .number = UserLevel_FieldNumber_Rank,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserLevel__storage_, rank),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nextLevelExperiencePoint",
        .dataTypeSpecific.className = NULL,
        .number = UserLevel_FieldNumber_NextLevelExperiencePoint,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserLevel__storage_, nextLevelExperiencePoint),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "nextLevelGetGoldCoins",
        .dataTypeSpecific.className = NULL,
        .number = UserLevel_FieldNumber_NextLevelGetGoldCoins,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserLevel__storage_, nextLevelGetGoldCoins),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserLevel class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserLevel__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\017\000\004\030\000\005\025\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FindUser

@implementation FindUser

@dynamic showId;
@dynamic userId;
@dynamic gender;
@dynamic avatar;
@dynamic nickName;
@dynamic brief;
@dynamic cityName;
@dynamic charmValue;
@dynamic likeUserNumber;
@dynamic isLiving;
@dynamic hasLevel, level;
@dynamic isToHao;
@dynamic longitude;
@dynamic latitude;
@dynamic liked;

typedef struct FindUser__storage_ {
  uint32_t _has_storage_[1];
  Gender gender;
  NSString *showId;
  NSString *userId;
  NSString *avatar;
  NSString *nickName;
  NSString *brief;
  NSString *cityName;
  UserLevel *level;
  int64_t charmValue;
  int64_t likeUserNumber;
  double longitude;
  double latitude;
} FindUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "showId",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_ShowId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FindUser__storage_, showId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FindUser__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gender",
        .dataTypeSpecific.enumDescFunc = Gender_EnumDescriptor,
        .number = FindUser_FieldNumber_Gender,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FindUser__storage_, gender),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_Avatar,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FindUser__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_NickName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FindUser__storage_, nickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brief",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_Brief,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(FindUser__storage_, brief),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityName",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_CityName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(FindUser__storage_, cityName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "charmValue",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_CharmValue,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(FindUser__storage_, charmValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "likeUserNumber",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_LikeUserNumber,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(FindUser__storage_, likeUserNumber),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "isLiving",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_IsLiving,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = GPBStringifySymbol(UserLevel),
        .number = FindUser_FieldNumber_Level,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(FindUser__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isToHao",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_IsToHao,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_Longitude,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(FindUser__storage_, longitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_Latitude,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(FindUser__storage_, latitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "liked",
        .dataTypeSpecific.className = NULL,
        .number = FindUser_FieldNumber_Liked,
        .hasIndex = 16,
        .offset = 17,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FindUser class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FindUser__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\006\000\002\006\000\005\010\000\007\010\000\010\n\000\t\016\000\n\010\000\014\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t FindUser_Gender_RawValue(FindUser *message) {
  GPBDescriptor *descriptor = [FindUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:FindUser_FieldNumber_Gender];
  return GPBGetMessageInt32Field(message, field);
}

void SetFindUser_Gender_RawValue(FindUser *message, int32_t value) {
  GPBDescriptor *descriptor = [FindUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:FindUser_FieldNumber_Gender];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersFindOtherRequest

@implementation UsersFindOtherRequest

@dynamic type;
@dynamic key;
@dynamic gender;
@dynamic skip;
@dynamic limit;

typedef struct UsersFindOtherRequest__storage_ {
  uint32_t _has_storage_[1];
  UsersFindOtherRequest_FindType type;
  Gender gender;
  int32_t skip;
  int32_t limit;
  NSString *key;
} UsersFindOtherRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = UsersFindOtherRequest_FindType_EnumDescriptor,
        .number = UsersFindOtherRequest_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersFindOtherRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "key",
        .dataTypeSpecific.className = NULL,
        .number = UsersFindOtherRequest_FieldNumber_Key,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersFindOtherRequest__storage_, key),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gender",
        .dataTypeSpecific.enumDescFunc = Gender_EnumDescriptor,
        .number = UsersFindOtherRequest_FieldNumber_Gender,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersFindOtherRequest__storage_, gender),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "skip",
        .dataTypeSpecific.className = NULL,
        .number = UsersFindOtherRequest_FieldNumber_Skip,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersFindOtherRequest__storage_, skip),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limit",
        .dataTypeSpecific.className = NULL,
        .number = UsersFindOtherRequest_FieldNumber_Limit,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersFindOtherRequest__storage_, limit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersFindOtherRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersFindOtherRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersFindOtherRequest_Type_RawValue(UsersFindOtherRequest *message) {
  GPBDescriptor *descriptor = [UsersFindOtherRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherRequest_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersFindOtherRequest_Type_RawValue(UsersFindOtherRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersFindOtherRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherRequest_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t UsersFindOtherRequest_Gender_RawValue(UsersFindOtherRequest *message) {
  GPBDescriptor *descriptor = [UsersFindOtherRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherRequest_FieldNumber_Gender];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersFindOtherRequest_Gender_RawValue(UsersFindOtherRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersFindOtherRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherRequest_FieldNumber_Gender];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum UsersFindOtherRequest_FindType

GPBEnumDescriptor *UsersFindOtherRequest_FindType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Nearest\000Recommend\000Search\000";
    static const int32_t values[] = {
        UsersFindOtherRequest_FindType_Nearest,
        UsersFindOtherRequest_FindType_Recommend,
        UsersFindOtherRequest_FindType_Search,
    };
    static const char *extraTextFormatInfo = "\003\000\007\000\001\t\000\002\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UsersFindOtherRequest_FindType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:UsersFindOtherRequest_FindType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL UsersFindOtherRequest_FindType_IsValidValue(int32_t value__) {
  switch (value__) {
    case UsersFindOtherRequest_FindType_Nearest:
    case UsersFindOtherRequest_FindType_Recommend:
    case UsersFindOtherRequest_FindType_Search:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UsersFindOtherResponse

@implementation UsersFindOtherResponse

@dynamic result;
@dynamic message;
@dynamic findUsersArray, findUsersArray_Count;

typedef struct UsersFindOtherResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *findUsersArray;
} UsersFindOtherResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersFindOtherResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersFindOtherResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersFindOtherResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersFindOtherResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "findUsersArray",
        .dataTypeSpecific.className = GPBStringifySymbol(FindUser),
        .number = UsersFindOtherResponse_FieldNumber_FindUsersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersFindOtherResponse__storage_, findUsersArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersFindOtherResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersFindOtherResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\000findUsers\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersFindOtherResponse_Result_RawValue(UsersFindOtherResponse *message) {
  GPBDescriptor *descriptor = [UsersFindOtherResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersFindOtherResponse_Result_RawValue(UsersFindOtherResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersFindOtherResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersFindOtherResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersLikeUserRequest

@implementation UsersLikeUserRequest

@dynamic users, users_Count;

typedef struct UsersLikeUserRequest__storage_ {
  uint32_t _has_storage_[1];
  GPBStringBoolDictionary *users;
} UsersLikeUserRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "users",
        .dataTypeSpecific.className = NULL,
        .number = UsersLikeUserRequest_FieldNumber_Users,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersLikeUserRequest__storage_, users),
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLikeUserRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLikeUserRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersLikeUserResponse

@implementation UsersLikeUserResponse

@dynamic result;
@dynamic message;

typedef struct UsersLikeUserResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersLikeUserResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersLikeUserResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLikeUserResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersLikeUserResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLikeUserResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLikeUserResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLikeUserResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersLikeUserResponse_Result_RawValue(UsersLikeUserResponse *message) {
  GPBDescriptor *descriptor = [UsersLikeUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLikeUserResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersLikeUserResponse_Result_RawValue(UsersLikeUserResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersLikeUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLikeUserResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersUnlikeUserRequest

@implementation UsersUnlikeUserRequest

@dynamic userId;

typedef struct UsersUnlikeUserRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} UsersUnlikeUserRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersUnlikeUserRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersUnlikeUserRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersUnlikeUserRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersUnlikeUserRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersUnlikeUserResponse

@implementation UsersUnlikeUserResponse

@dynamic result;
@dynamic message;

typedef struct UsersUnlikeUserResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersUnlikeUserResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersUnlikeUserResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersUnlikeUserResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersUnlikeUserResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersUnlikeUserResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersUnlikeUserResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersUnlikeUserResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersUnlikeUserResponse_Result_RawValue(UsersUnlikeUserResponse *message) {
  GPBDescriptor *descriptor = [UsersUnlikeUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersUnlikeUserResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersUnlikeUserResponse_Result_RawValue(UsersUnlikeUserResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersUnlikeUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersUnlikeUserResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersChangeLikeStateRequest

@implementation UsersChangeLikeStateRequest

@dynamic userId;
@dynamic state;

typedef struct UsersChangeLikeStateRequest__storage_ {
  uint32_t _has_storage_[1];
  UsersChangeLikeStateRequest_State state;
  NSString *userId;
} UsersChangeLikeStateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersChangeLikeStateRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersChangeLikeStateRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.enumDescFunc = UsersChangeLikeStateRequest_State_EnumDescriptor,
        .number = UsersChangeLikeStateRequest_FieldNumber_State,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersChangeLikeStateRequest__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersChangeLikeStateRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersChangeLikeStateRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersChangeLikeStateRequest_State_RawValue(UsersChangeLikeStateRequest *message) {
  GPBDescriptor *descriptor = [UsersChangeLikeStateRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersChangeLikeStateRequest_FieldNumber_State];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersChangeLikeStateRequest_State_RawValue(UsersChangeLikeStateRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersChangeLikeStateRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersChangeLikeStateRequest_FieldNumber_State];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum UsersChangeLikeStateRequest_State

GPBEnumDescriptor *UsersChangeLikeStateRequest_State_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Normal\000Special\000";
    static const int32_t values[] = {
        UsersChangeLikeStateRequest_State_Normal,
        UsersChangeLikeStateRequest_State_Special,
    };
    static const char *extraTextFormatInfo = "\002\000\006\000\001\007\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UsersChangeLikeStateRequest_State)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:UsersChangeLikeStateRequest_State_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL UsersChangeLikeStateRequest_State_IsValidValue(int32_t value__) {
  switch (value__) {
    case UsersChangeLikeStateRequest_State_Normal:
    case UsersChangeLikeStateRequest_State_Special:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UsersChangeLikeStateResponse

@implementation UsersChangeLikeStateResponse

@dynamic result;
@dynamic message;

typedef struct UsersChangeLikeStateResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersChangeLikeStateResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersChangeLikeStateResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersChangeLikeStateResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersChangeLikeStateResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersChangeLikeStateResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersChangeLikeStateResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersChangeLikeStateResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersChangeLikeStateResponse_Result_RawValue(UsersChangeLikeStateResponse *message) {
  GPBDescriptor *descriptor = [UsersChangeLikeStateResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersChangeLikeStateResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersChangeLikeStateResponse_Result_RawValue(UsersChangeLikeStateResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersChangeLikeStateResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersChangeLikeStateResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetSignedInInfoRequest

@implementation UsersGetSignedInInfoRequest

@dynamic userId;

typedef struct UsersGetSignedInInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} UsersGetSignedInInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetSignedInInfoRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetSignedInInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetSignedInInfoResponse

@implementation UsersGetSignedInInfoResponse

@dynamic result;
@dynamic message;
@dynamic isSignedToday;
@dynamic accumulationSignedDays;
@dynamic signedInInfoArray, signedInInfoArray_Count;

typedef struct UsersGetSignedInInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *signedInInfoArray;
  int64_t accumulationSignedDays;
} UsersGetSignedInInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersGetSignedInInfoResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isSignedToday",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoResponse_FieldNumber_IsSignedToday,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "accumulationSignedDays",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoResponse_FieldNumber_AccumulationSignedDays,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse__storage_, accumulationSignedDays),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "signedInInfoArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersGetSignedInInfoResponse_SignedInInfo),
        .number = UsersGetSignedInInfoResponse_FieldNumber_SignedInInfoArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse__storage_, signedInInfoArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetSignedInInfoResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetSignedInInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\003\r\000\004\026\000\005\000signedInInfo\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetSignedInInfoResponse_Result_RawValue(UsersGetSignedInInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersGetSignedInInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetSignedInInfoResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetSignedInInfoResponse_Result_RawValue(UsersGetSignedInInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetSignedInInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetSignedInInfoResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetSignedInInfoResponse_SignedInInfo

@implementation UsersGetSignedInInfoResponse_SignedInInfo

@dynamic day;
@dynamic goldCoins;

typedef struct UsersGetSignedInInfoResponse_SignedInInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t day;
  int64_t goldCoins;
} UsersGetSignedInInfoResponse_SignedInInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "day",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoResponse_SignedInInfo_FieldNumber_Day,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse_SignedInInfo__storage_, day),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "goldCoins",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetSignedInInfoResponse_SignedInInfo_FieldNumber_GoldCoins,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetSignedInInfoResponse_SignedInInfo__storage_, goldCoins),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetSignedInInfoResponse_SignedInInfo class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetSignedInInfoResponse_SignedInInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersGetSignedInInfoResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetChargeCorrespondingTableRequest

@implementation UsersGetChargeCorrespondingTableRequest

@dynamic userId;

typedef struct UsersGetChargeCorrespondingTableRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} UsersGetChargeCorrespondingTableRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetChargeCorrespondingTableRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetChargeCorrespondingTableRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetChargeCorrespondingTableRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetChargeCorrespondingTableResponse

@implementation UsersGetChargeCorrespondingTableResponse

@dynamic result;
@dynamic message;
@dynamic bundleArray, bundleArray_Count;

typedef struct UsersGetChargeCorrespondingTableResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *bundleArray;
} UsersGetChargeCorrespondingTableResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersGetChargeCorrespondingTableResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetChargeCorrespondingTableResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bundleArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersGetChargeCorrespondingTableResponse_Bundle),
        .number = UsersGetChargeCorrespondingTableResponse_FieldNumber_BundleArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableResponse__storage_, bundleArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetChargeCorrespondingTableResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetChargeCorrespondingTableResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetChargeCorrespondingTableResponse_Result_RawValue(UsersGetChargeCorrespondingTableResponse *message) {
  GPBDescriptor *descriptor = [UsersGetChargeCorrespondingTableResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetChargeCorrespondingTableResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetChargeCorrespondingTableResponse_Result_RawValue(UsersGetChargeCorrespondingTableResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetChargeCorrespondingTableResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetChargeCorrespondingTableResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetChargeCorrespondingTableResponse_Bundle

@implementation UsersGetChargeCorrespondingTableResponse_Bundle

@dynamic money;
@dynamic goldCoins;

typedef struct UsersGetChargeCorrespondingTableResponse_Bundle__storage_ {
  uint32_t _has_storage_[1];
  int64_t money;
  int64_t goldCoins;
} UsersGetChargeCorrespondingTableResponse_Bundle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "money",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetChargeCorrespondingTableResponse_Bundle_FieldNumber_Money,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableResponse_Bundle__storage_, money),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "goldCoins",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetChargeCorrespondingTableResponse_Bundle_FieldNumber_GoldCoins,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetChargeCorrespondingTableResponse_Bundle__storage_, goldCoins),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetChargeCorrespondingTableResponse_Bundle class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetChargeCorrespondingTableResponse_Bundle__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersGetChargeCorrespondingTableResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersVerifyIsRegisteredUserRequest

@implementation UsersVerifyIsRegisteredUserRequest

@dynamic bundleArray, bundleArray_Count;

typedef struct UsersVerifyIsRegisteredUserRequest__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *bundleArray;
} UsersVerifyIsRegisteredUserRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bundleArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersVerifyIsRegisteredUserRequest_Bundle),
        .number = UsersVerifyIsRegisteredUserRequest_FieldNumber_BundleArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserRequest__storage_, bundleArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersVerifyIsRegisteredUserRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersVerifyIsRegisteredUserRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersVerifyIsRegisteredUserRequest_Bundle

@implementation UsersVerifyIsRegisteredUserRequest_Bundle

@dynamic telephoneZone;
@dynamic telephone;

typedef struct UsersVerifyIsRegisteredUserRequest_Bundle__storage_ {
  uint32_t _has_storage_[1];
  NSString *telephoneZone;
  NSString *telephone;
} UsersVerifyIsRegisteredUserRequest_Bundle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "telephoneZone",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserRequest_Bundle_FieldNumber_TelephoneZone,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserRequest_Bundle__storage_, telephoneZone),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "telephone",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserRequest_Bundle_FieldNumber_Telephone,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserRequest_Bundle__storage_, telephone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersVerifyIsRegisteredUserRequest_Bundle class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersVerifyIsRegisteredUserRequest_Bundle__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersVerifyIsRegisteredUserRequest)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersVerifyIsRegisteredUserResponse

@implementation UsersVerifyIsRegisteredUserResponse

@dynamic result;
@dynamic message;
@dynamic bundleArray, bundleArray_Count;

typedef struct UsersVerifyIsRegisteredUserResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *bundleArray;
} UsersVerifyIsRegisteredUserResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersVerifyIsRegisteredUserResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bundleArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersVerifyIsRegisteredUserResponse_Bundle),
        .number = UsersVerifyIsRegisteredUserResponse_FieldNumber_BundleArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserResponse__storage_, bundleArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersVerifyIsRegisteredUserResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersVerifyIsRegisteredUserResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersVerifyIsRegisteredUserResponse_Result_RawValue(UsersVerifyIsRegisteredUserResponse *message) {
  GPBDescriptor *descriptor = [UsersVerifyIsRegisteredUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersVerifyIsRegisteredUserResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersVerifyIsRegisteredUserResponse_Result_RawValue(UsersVerifyIsRegisteredUserResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersVerifyIsRegisteredUserResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersVerifyIsRegisteredUserResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersVerifyIsRegisteredUserResponse_Bundle

@implementation UsersVerifyIsRegisteredUserResponse_Bundle

@dynamic telephoneZone;
@dynamic telephone;
@dynamic isRegisteredUser;

typedef struct UsersVerifyIsRegisteredUserResponse_Bundle__storage_ {
  uint32_t _has_storage_[1];
  NSString *telephoneZone;
  NSString *telephone;
} UsersVerifyIsRegisteredUserResponse_Bundle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "telephoneZone",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserResponse_Bundle_FieldNumber_TelephoneZone,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserResponse_Bundle__storage_, telephoneZone),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "telephone",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserResponse_Bundle_FieldNumber_Telephone,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersVerifyIsRegisteredUserResponse_Bundle__storage_, telephone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isRegisteredUser",
        .dataTypeSpecific.className = NULL,
        .number = UsersVerifyIsRegisteredUserResponse_Bundle_FieldNumber_IsRegisteredUser,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersVerifyIsRegisteredUserResponse_Bundle class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersVerifyIsRegisteredUserResponse_Bundle__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\r\000\003\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersVerifyIsRegisteredUserResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetInfoRequest

@implementation UsersGetInfoRequest

@dynamic userId;

typedef struct UsersGetInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} UsersGetInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetInfoRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetInfoRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetInfoResponse

@implementation UsersGetInfoResponse

@dynamic result;
@dynamic message;
@dynamic showId;
@dynamic name;
@dynamic nickName;
@dynamic gender;
@dynamic birthday;
@dynamic cityName;
@dynamic hasLevel, level;
@dynamic constellation;
@dynamic brief;
@dynamic income;
@dynamic outcome;
@dynamic goldCoins;
@dynamic charmValue;
@dynamic myLikeCount;
@dynamic likeMeCount;
@dynamic avatarURL;
@dynamic avatarArray, avatarArray_Count;
@dynamic settings;
@dynamic isLiked;
@dynamic isSpecialLike;
@dynamic isTelephoneBinding;
@dynamic signed_p;

typedef struct UsersGetInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  Gender gender;
  NSString *message;
  NSString *showId;
  NSString *name;
  NSString *nickName;
  NSString *cityName;
  UserLevel *level;
  NSString *constellation;
  NSString *brief;
  NSString *avatarURL;
  NSMutableArray *avatarArray;
  NSString *settings;
  int64_t birthday;
  int64_t income;
  int64_t outcome;
  int64_t goldCoins;
  int64_t charmValue;
  int64_t myLikeCount;
  int64_t likeMeCount;
} UsersGetInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersGetInfoResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "showId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_ShowId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, showId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Name,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_NickName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, nickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gender",
        .dataTypeSpecific.enumDescFunc = Gender_EnumDescriptor,
        .number = UsersGetInfoResponse_FieldNumber_Gender,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, gender),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Birthday,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "cityName",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_CityName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, cityName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = GPBStringifySymbol(UserLevel),
        .number = UsersGetInfoResponse_FieldNumber_Level,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "constellation",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Constellation,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, constellation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brief",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Brief,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, brief),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "income",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Income,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, income),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "outcome",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Outcome,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, outcome),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "goldCoins",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_GoldCoins,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, goldCoins),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "charmValue",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_CharmValue,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, charmValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "myLikeCount",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_MyLikeCount,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, myLikeCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "likeMeCount",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_LikeMeCount,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, likeMeCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "avatarURL",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_AvatarURL,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, avatarURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatarArray",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_AvatarArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, avatarArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "settings",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Settings,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(UsersGetInfoResponse__storage_, settings),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isLiked",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_IsLiked,
        .hasIndex = 19,
        .offset = 20,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isSpecialLike",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_IsSpecialLike,
        .hasIndex = 21,
        .offset = 22,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isTelephoneBinding",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_IsTelephoneBinding,
        .hasIndex = 23,
        .offset = 24,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "signed_p",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetInfoResponse_FieldNumber_Signed_p,
        .hasIndex = 25,
        .offset = 26,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetInfoResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\003\006\000\005\010\000\010\010\000\016\t\000\017\n\000\020\013\000\021\013\000\022\007!!\000\025\007\000\026\r\000\027\022\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetInfoResponse_Result_RawValue(UsersGetInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersGetInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetInfoResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetInfoResponse_Result_RawValue(UsersGetInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetInfoResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t UsersGetInfoResponse_Gender_RawValue(UsersGetInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersGetInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetInfoResponse_FieldNumber_Gender];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetInfoResponse_Gender_RawValue(UsersGetInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetInfoResponse_FieldNumber_Gender];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetLikeMeUserInfoRequest

@implementation UsersGetLikeMeUserInfoRequest

@dynamic userId;
@dynamic online;
@dynamic skip;
@dynamic limit;

typedef struct UsersGetLikeMeUserInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t skip;
  int32_t limit;
  NSString *userId;
} UsersGetLikeMeUserInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "online",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoRequest_FieldNumber_Online,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "skip",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoRequest_FieldNumber_Skip,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoRequest__storage_, skip),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limit",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoRequest_FieldNumber_Limit,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoRequest__storage_, limit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetLikeMeUserInfoRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetLikeMeUserInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetLikeMeUserInfoResponse

@implementation UsersGetLikeMeUserInfoResponse

@dynamic result;
@dynamic message;
@dynamic likeMeUserArray, likeMeUserArray_Count;

typedef struct UsersGetLikeMeUserInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *likeMeUserArray;
} UsersGetLikeMeUserInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersGetLikeMeUserInfoResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "likeMeUserArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersGetLikeMeUserInfoResponse_LikeMeUser),
        .number = UsersGetLikeMeUserInfoResponse_FieldNumber_LikeMeUserArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse__storage_, likeMeUserArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetLikeMeUserInfoResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetLikeMeUserInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\000likeMeUser\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetLikeMeUserInfoResponse_Result_RawValue(UsersGetLikeMeUserInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersGetLikeMeUserInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetLikeMeUserInfoResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetLikeMeUserInfoResponse_Result_RawValue(UsersGetLikeMeUserInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetLikeMeUserInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetLikeMeUserInfoResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetLikeMeUserInfoResponse_LikeMeUser

@implementation UsersGetLikeMeUserInfoResponse_LikeMeUser

@dynamic showId;
@dynamic userId;
@dynamic avatar;
@dynamic nickName;
@dynamic brief;
@dynamic isToHao;
@dynamic hasUserLevel, userLevel;
@dynamic likeTimestamp;
@dynamic state;
@dynamic isMyLike;

typedef struct UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_ {
  uint32_t _has_storage_[1];
  UsersGetLikeMeUserInfoResponse_LikeMeUser_State state;
  NSString *showId;
  NSString *userId;
  NSString *avatar;
  NSString *nickName;
  NSString *brief;
  UserLevel *userLevel;
  int64_t likeTimestamp;
} UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "showId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_ShowId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, showId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_Avatar,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_NickName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, nickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brief",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_Brief,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, brief),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isToHao",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_IsToHao,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "userLevel",
        .dataTypeSpecific.className = GPBStringifySymbol(UserLevel),
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_UserLevel,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, userLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "likeTimestamp",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_LikeTimestamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, likeTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.enumDescFunc = UsersGetLikeMeUserInfoResponse_LikeMeUser_State_EnumDescriptor,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_State,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isMyLike",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_IsMyLike,
        .hasIndex = 10,
        .offset = 11,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetLikeMeUserInfoResponse_LikeMeUser class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetLikeMeUserInfoResponse_LikeMeUser__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001\006\000\002\006\000\004\010\000\006\007\000\007\t\000\010\r\000\n\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersGetLikeMeUserInfoResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetLikeMeUserInfoResponse_LikeMeUser_State_RawValue(UsersGetLikeMeUserInfoResponse_LikeMeUser *message) {
  GPBDescriptor *descriptor = [UsersGetLikeMeUserInfoResponse_LikeMeUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_State];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetLikeMeUserInfoResponse_LikeMeUser_State_RawValue(UsersGetLikeMeUserInfoResponse_LikeMeUser *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetLikeMeUserInfoResponse_LikeMeUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetLikeMeUserInfoResponse_LikeMeUser_FieldNumber_State];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum UsersGetLikeMeUserInfoResponse_LikeMeUser_State

GPBEnumDescriptor *UsersGetLikeMeUserInfoResponse_LikeMeUser_State_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Normal\000Special\000";
    static const int32_t values[] = {
        UsersGetLikeMeUserInfoResponse_LikeMeUser_State_Normal,
        UsersGetLikeMeUserInfoResponse_LikeMeUser_State_Special,
    };
    static const char *extraTextFormatInfo = "\002\000\006\000\001\007\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UsersGetLikeMeUserInfoResponse_LikeMeUser_State)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:UsersGetLikeMeUserInfoResponse_LikeMeUser_State_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL UsersGetLikeMeUserInfoResponse_LikeMeUser_State_IsValidValue(int32_t value__) {
  switch (value__) {
    case UsersGetLikeMeUserInfoResponse_LikeMeUser_State_Normal:
    case UsersGetLikeMeUserInfoResponse_LikeMeUser_State_Special:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UsersGetMeLikeUserInfoRequest

@implementation UsersGetMeLikeUserInfoRequest

@dynamic userId;
@dynamic online;
@dynamic skip;
@dynamic limit;

typedef struct UsersGetMeLikeUserInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t skip;
  int32_t limit;
  NSString *userId;
} UsersGetMeLikeUserInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "online",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoRequest_FieldNumber_Online,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "skip",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoRequest_FieldNumber_Skip,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoRequest__storage_, skip),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limit",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoRequest_FieldNumber_Limit,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoRequest__storage_, limit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetMeLikeUserInfoRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetMeLikeUserInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersGetMeLikeUserInfoResponse

@implementation UsersGetMeLikeUserInfoResponse

@dynamic result;
@dynamic message;
@dynamic meLikeUserArray, meLikeUserArray_Count;

typedef struct UsersGetMeLikeUserInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
  NSMutableArray *meLikeUserArray;
} UsersGetMeLikeUserInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersGetMeLikeUserInfoResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "meLikeUserArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersGetMeLikeUserInfoResponse_MeLikeUser),
        .number = UsersGetMeLikeUserInfoResponse_FieldNumber_MeLikeUserArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse__storage_, meLikeUserArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetMeLikeUserInfoResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetMeLikeUserInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\000meLikeUser\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetMeLikeUserInfoResponse_Result_RawValue(UsersGetMeLikeUserInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersGetMeLikeUserInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetMeLikeUserInfoResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetMeLikeUserInfoResponse_Result_RawValue(UsersGetMeLikeUserInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetMeLikeUserInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetMeLikeUserInfoResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersGetMeLikeUserInfoResponse_MeLikeUser

@implementation UsersGetMeLikeUserInfoResponse_MeLikeUser

@dynamic showId;
@dynamic userId;
@dynamic avatar;
@dynamic nickName;
@dynamic brief;
@dynamic isToHao;
@dynamic hasUserLevel, userLevel;
@dynamic likeTimestamp;
@dynamic state;

typedef struct UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_ {
  uint32_t _has_storage_[1];
  UsersGetMeLikeUserInfoResponse_MeLikeUser_State state;
  NSString *showId;
  NSString *userId;
  NSString *avatar;
  NSString *nickName;
  NSString *brief;
  UserLevel *userLevel;
  int64_t likeTimestamp;
} UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "showId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_ShowId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, showId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_Avatar,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_NickName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, nickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brief",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_Brief,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, brief),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isToHao",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_IsToHao,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "userLevel",
        .dataTypeSpecific.className = GPBStringifySymbol(UserLevel),
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_UserLevel,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, userLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "likeTimestamp",
        .dataTypeSpecific.className = NULL,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_LikeTimestamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, likeTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.enumDescFunc = UsersGetMeLikeUserInfoResponse_MeLikeUser_State_EnumDescriptor,
        .number = UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_State,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersGetMeLikeUserInfoResponse_MeLikeUser class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersGetMeLikeUserInfoResponse_MeLikeUser__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\006\000\002\006\000\004\010\000\006\007\000\007\t\000\010\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersGetMeLikeUserInfoResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersGetMeLikeUserInfoResponse_MeLikeUser_State_RawValue(UsersGetMeLikeUserInfoResponse_MeLikeUser *message) {
  GPBDescriptor *descriptor = [UsersGetMeLikeUserInfoResponse_MeLikeUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_State];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersGetMeLikeUserInfoResponse_MeLikeUser_State_RawValue(UsersGetMeLikeUserInfoResponse_MeLikeUser *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersGetMeLikeUserInfoResponse_MeLikeUser descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersGetMeLikeUserInfoResponse_MeLikeUser_FieldNumber_State];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum UsersGetMeLikeUserInfoResponse_MeLikeUser_State

GPBEnumDescriptor *UsersGetMeLikeUserInfoResponse_MeLikeUser_State_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Normal\000Special\000";
    static const int32_t values[] = {
        UsersGetMeLikeUserInfoResponse_MeLikeUser_State_Normal,
        UsersGetMeLikeUserInfoResponse_MeLikeUser_State_Special,
    };
    static const char *extraTextFormatInfo = "\002\000\006\000\001\007\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UsersGetMeLikeUserInfoResponse_MeLikeUser_State)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:UsersGetMeLikeUserInfoResponse_MeLikeUser_State_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL UsersGetMeLikeUserInfoResponse_MeLikeUser_State_IsValidValue(int32_t value__) {
  switch (value__) {
    case UsersGetMeLikeUserInfoResponse_MeLikeUser_State_Normal:
    case UsersGetMeLikeUserInfoResponse_MeLikeUser_State_Special:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UsersAlterInfoRequest

@implementation UsersAlterInfoRequest

@dynamic field;
@dynamic password;
@dynamic newPassword;
@dynamic nickName;
@dynamic avatar;
@dynamic gender;
@dynamic brief;
@dynamic cityName;
@dynamic longitude;
@dynamic latitude;
@dynamic settings;
@dynamic isGaming;
@dynamic gameName;

typedef struct UsersAlterInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  Gender gender;
  NSString *password;
  NSString *newPassword;
  NSString *nickName;
  NSString *avatar;
  NSString *brief;
  NSString *cityName;
  NSString *settings;
  NSString *gameName;
  int64_t field;
  double longitude;
  double latitude;
} UsersAlterInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "field",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Field,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, field),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Password,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newPassword",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_NewPassword,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, newPassword),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_NickName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, nickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Avatar,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gender",
        .dataTypeSpecific.enumDescFunc = Gender_EnumDescriptor,
        .number = UsersAlterInfoRequest_FieldNumber_Gender,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, gender),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "brief",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Brief,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, brief),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityName",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_CityName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, cityName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Longitude,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, longitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Latitude,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, latitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "settings",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_Settings,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, settings),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isGaming",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_IsGaming,
        .hasIndex = 11,
        .offset = 12,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "gameName",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoRequest_FieldNumber_GameName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UsersAlterInfoRequest__storage_, gameName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersAlterInfoRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersAlterInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\003\013\000\004\010\000\010\010\000\014\010\000\r\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersAlterInfoRequest_Gender_RawValue(UsersAlterInfoRequest *message) {
  GPBDescriptor *descriptor = [UsersAlterInfoRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAlterInfoRequest_FieldNumber_Gender];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersAlterInfoRequest_Gender_RawValue(UsersAlterInfoRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersAlterInfoRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAlterInfoRequest_FieldNumber_Gender];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersAlterInfoResponse

@implementation UsersAlterInfoResponse

@dynamic result;
@dynamic message;

typedef struct UsersAlterInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersAlterInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersAlterInfoResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersAlterInfoResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersAlterInfoResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersAlterInfoResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersAlterInfoResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersAlterInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersAlterInfoResponse_Result_RawValue(UsersAlterInfoResponse *message) {
  GPBDescriptor *descriptor = [UsersAlterInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAlterInfoResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersAlterInfoResponse_Result_RawValue(UsersAlterInfoResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersAlterInfoResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAlterInfoResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersLoginRequest

@implementation UsersLoginRequest

@dynamic field;
@dynamic channelUuid;
@dynamic telephone;
@dynamic telephoneZone;
@dynamic telephoneVerifyCode;
@dynamic qqKey;
@dynamic weiboKey;
@dynamic userName;
@dynamic password;
@dynamic userId;
@dynamic certificate;

typedef struct UsersLoginRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t field;
  NSString *channelUuid;
  NSString *telephone;
  NSString *telephoneZone;
  NSString *telephoneVerifyCode;
  NSString *qqKey;
  NSString *weiboKey;
  NSString *userName;
  NSString *password;
  NSString *userId;
  NSString *certificate;
} UsersLoginRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "field",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_Field,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, field),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "channelUuid",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_ChannelUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, channelUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "telephone",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_Telephone,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, telephone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "telephoneZone",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_TelephoneZone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, telephoneZone),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "telephoneVerifyCode",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_TelephoneVerifyCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, telephoneVerifyCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "qqKey",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_QqKey,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, qqKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weiboKey",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_WeiboKey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, weiboKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_UserName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_Password,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_UserId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "certificate",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginRequest_FieldNumber_Certificate,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UsersLoginRequest__storage_, certificate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLoginRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLoginRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\010c\000\004\r\000\005\023\000\006\005\000\007\010\000\010\010\000\n\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersLoginResponse

@implementation UsersLoginResponse

@dynamic result;
@dynamic message;
@dynamic showId;
@dynamic userId;
@dynamic token;
@dynamic isFirstLogin;
@dynamic settings;
@dynamic webApiUserUploadAvatarURL;
@dynamic webApiUserGetAvatarURL;
@dynamic certificate;
@dynamic hasMyRoom, myRoom;
@dynamic hasLastJoinRoom, lastJoinRoom;

typedef struct UsersLoginResponse__storage_ {
  uint32_t _has_storage_[1];
  UsersLoginResponse_UserLoginResult result;
  NSString *message;
  NSString *showId;
  NSString *userId;
  NSString *token;
  NSString *settings;
  NSString *webApiUserUploadAvatarURL;
  NSString *webApiUserGetAvatarURL;
  NSString *certificate;
  UsersLoginResponse_Room *myRoom;
  UsersLoginResponse_Room *lastJoinRoom;
} UsersLoginResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = UsersLoginResponse_UserLoginResult_EnumDescriptor,
        .number = UsersLoginResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "showId",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_ShowId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, showId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_UserId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_Token,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, token),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isFirstLogin",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_IsFirstLogin,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "settings",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_Settings,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, settings),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "webApiUserUploadAvatarURL",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_WebApiUserUploadAvatarURL,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, webApiUserUploadAvatarURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "webApiUserGetAvatarURL",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_WebApiUserGetAvatarURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, webApiUserGetAvatarURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "certificate",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_FieldNumber_Certificate,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, certificate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "myRoom",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersLoginResponse_Room),
        .number = UsersLoginResponse_FieldNumber_MyRoom,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, myRoom),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "lastJoinRoom",
        .dataTypeSpecific.className = GPBStringifySymbol(UsersLoginResponse_Room),
        .number = UsersLoginResponse_FieldNumber_LastJoinRoom,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UsersLoginResponse__storage_, lastJoinRoom),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLoginResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLoginResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\003\006\000\004\006\000\006\014\000\010\027!!\000\t\024!!\000\013\006\000\014\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersLoginResponse_Result_RawValue(UsersLoginResponse *message) {
  GPBDescriptor *descriptor = [UsersLoginResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLoginResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersLoginResponse_Result_RawValue(UsersLoginResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersLoginResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLoginResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum UsersLoginResponse_UserLoginResult

GPBEnumDescriptor *UsersLoginResponse_UserLoginResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "UserLoginResultSucceeded\000UserLoginResult"
        "AppKeyIsEmpty\000UserLoginResultInvalidAppK"
        "ey\000UserLoginResultTelephoneZoneOrTelepho"
        "neNumberIsEmpty\000UserLoginResultInvalidTe"
        "lephone\000UserLoginResultVerifyCodeIsEmpty"
        "\000UserLoginResultVerifyTooMuch\000UserLoginR"
        "esultVerityCodeError\000UserLoginResultServ"
        "iceNotTurnon\000UserLoginResultInternalServ"
        "erError\000UserLoginResultUnknownError\000User"
        "LoginResultInvalidUserIdOrPassword\000UserL"
        "oginResultUnknownChannelError\000";
    static const int32_t values[] = {
        UsersLoginResponse_UserLoginResult_UserLoginResultSucceeded,
        UsersLoginResponse_UserLoginResult_UserLoginResultAppKeyIsEmpty,
        UsersLoginResponse_UserLoginResult_UserLoginResultInvalidAppKey,
        UsersLoginResponse_UserLoginResult_UserLoginResultTelephoneZoneOrTelephoneNumberIsEmpty,
        UsersLoginResponse_UserLoginResult_UserLoginResultInvalidTelephone,
        UsersLoginResponse_UserLoginResult_UserLoginResultVerifyCodeIsEmpty,
        UsersLoginResponse_UserLoginResult_UserLoginResultVerifyTooMuch,
        UsersLoginResponse_UserLoginResult_UserLoginResultVerityCodeError,
        UsersLoginResponse_UserLoginResult_UserLoginResultServiceNotTurnon,
        UsersLoginResponse_UserLoginResult_UserLoginResultInternalServerError,
        UsersLoginResponse_UserLoginResult_UserLoginResultUnknownError,
        UsersLoginResponse_UserLoginResult_UserLoginResultInvalidUserIdOrPassword,
        UsersLoginResponse_UserLoginResult_UserLoginResultUnknownChannelError,
    };
    static const char *extraTextFormatInfo = "\r\000\030\000\001\034\000\002\034\000\003\037\025\000\004\037\000\005\037\001\000\006\034\000\007\036\000\010\037\000\t\037\003\000\n\033\000\013\037\007\000\014\037\003\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UsersLoginResponse_UserLoginResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:UsersLoginResponse_UserLoginResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL UsersLoginResponse_UserLoginResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case UsersLoginResponse_UserLoginResult_UserLoginResultSucceeded:
    case UsersLoginResponse_UserLoginResult_UserLoginResultAppKeyIsEmpty:
    case UsersLoginResponse_UserLoginResult_UserLoginResultInvalidAppKey:
    case UsersLoginResponse_UserLoginResult_UserLoginResultTelephoneZoneOrTelephoneNumberIsEmpty:
    case UsersLoginResponse_UserLoginResult_UserLoginResultInvalidTelephone:
    case UsersLoginResponse_UserLoginResult_UserLoginResultVerifyCodeIsEmpty:
    case UsersLoginResponse_UserLoginResult_UserLoginResultVerifyTooMuch:
    case UsersLoginResponse_UserLoginResult_UserLoginResultVerityCodeError:
    case UsersLoginResponse_UserLoginResult_UserLoginResultServiceNotTurnon:
    case UsersLoginResponse_UserLoginResult_UserLoginResultInternalServerError:
    case UsersLoginResponse_UserLoginResult_UserLoginResultUnknownError:
    case UsersLoginResponse_UserLoginResult_UserLoginResultInvalidUserIdOrPassword:
    case UsersLoginResponse_UserLoginResult_UserLoginResultUnknownChannelError:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UsersLoginResponse_Room

@implementation UsersLoginResponse_Room

@dynamic ownerId;
@dynamic title;
@dynamic password;
@dynamic gameName;
@dynamic isPrivate;
@dynamic isLiving;
@dynamic isGaming;

typedef struct UsersLoginResponse_Room__storage_ {
  uint32_t _has_storage_[1];
  NSString *ownerId;
  NSString *title;
  NSString *password;
  NSString *gameName;
} UsersLoginResponse_Room__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ownerId",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_OwnerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLoginResponse_Room__storage_, ownerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_Title,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLoginResponse_Room__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_Password,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UsersLoginResponse_Room__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gameName",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_GameName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UsersLoginResponse_Room__storage_, gameName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isPrivate",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_IsPrivate,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isLiving",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_IsLiving,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isGaming",
        .dataTypeSpecific.className = NULL,
        .number = UsersLoginResponse_Room_FieldNumber_IsGaming,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLoginResponse_Room class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLoginResponse_Room__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\007\000\004\010\000\005\t\000\006\010\000\007\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(UsersLoginResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersValidateTokenRequest

@implementation UsersValidateTokenRequest

@dynamic userId;
@dynamic token;

typedef struct UsersValidateTokenRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *token;
} UsersValidateTokenRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersValidateTokenRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersValidateTokenRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = NULL,
        .number = UsersValidateTokenRequest_FieldNumber_Token,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersValidateTokenRequest__storage_, token),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersValidateTokenRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersValidateTokenRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersValidateTokenResponse

@implementation UsersValidateTokenResponse

@dynamic result;
@dynamic message;
@dynamic succeeded;

typedef struct UsersValidateTokenResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersValidateTokenResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersValidateTokenResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersValidateTokenResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersValidateTokenResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersValidateTokenResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "succeeded",
        .dataTypeSpecific.className = NULL,
        .number = UsersValidateTokenResponse_FieldNumber_Succeeded,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersValidateTokenResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersValidateTokenResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersValidateTokenResponse_Result_RawValue(UsersValidateTokenResponse *message) {
  GPBDescriptor *descriptor = [UsersValidateTokenResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersValidateTokenResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersValidateTokenResponse_Result_RawValue(UsersValidateTokenResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersValidateTokenResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersValidateTokenResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersSignedInRequest

@implementation UsersSignedInRequest

@dynamic userId;

typedef struct UsersSignedInRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} UsersSignedInRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersSignedInRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersSignedInRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersSignedInRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersSignedInRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersSignedInResponse

@implementation UsersSignedInResponse

@dynamic result;
@dynamic message;

typedef struct UsersSignedInResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersSignedInResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersSignedInResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersSignedInResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersSignedInResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersSignedInResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersSignedInResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersSignedInResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersSignedInResponse_Result_RawValue(UsersSignedInResponse *message) {
  GPBDescriptor *descriptor = [UsersSignedInResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersSignedInResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersSignedInResponse_Result_RawValue(UsersSignedInResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersSignedInResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersSignedInResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersLogoutRequest

@implementation UsersLogoutRequest

@dynamic userId;
@dynamic password;

typedef struct UsersLogoutRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *password;
} UsersLogoutRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UsersLogoutRequest_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLogoutRequest__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = UsersLogoutRequest_FieldNumber_Password,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLogoutRequest__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLogoutRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLogoutRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersLogoutResponse

@implementation UsersLogoutResponse

@dynamic result;
@dynamic message;

typedef struct UsersLogoutResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersLogoutResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersLogoutResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersLogoutResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersLogoutResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersLogoutResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersLogoutResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersLogoutResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersLogoutResponse_Result_RawValue(UsersLogoutResponse *message) {
  GPBDescriptor *descriptor = [UsersLogoutResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLogoutResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersLogoutResponse_Result_RawValue(UsersLogoutResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersLogoutResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersLogoutResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersRemoveAvatarRequest

@implementation UsersRemoveAvatarRequest

@dynamic avatarName;

typedef struct UsersRemoveAvatarRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *avatarName;
} UsersRemoveAvatarRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "avatarName",
        .dataTypeSpecific.className = NULL,
        .number = UsersRemoveAvatarRequest_FieldNumber_AvatarName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersRemoveAvatarRequest__storage_, avatarName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersRemoveAvatarRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersRemoveAvatarRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersRemoveAvatarResponse

@implementation UsersRemoveAvatarResponse

@dynamic result;
@dynamic message;

typedef struct UsersRemoveAvatarResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersRemoveAvatarResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersRemoveAvatarResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersRemoveAvatarResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersRemoveAvatarResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersRemoveAvatarResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersRemoveAvatarResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersRemoveAvatarResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersRemoveAvatarResponse_Result_RawValue(UsersRemoveAvatarResponse *message) {
  GPBDescriptor *descriptor = [UsersRemoveAvatarResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersRemoveAvatarResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersRemoveAvatarResponse_Result_RawValue(UsersRemoveAvatarResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersRemoveAvatarResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersRemoveAvatarResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UsersAccusationOtherRequest

@implementation UsersAccusationOtherRequest

@dynamic otherId;

typedef struct UsersAccusationOtherRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *otherId;
} UsersAccusationOtherRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "otherId",
        .dataTypeSpecific.className = NULL,
        .number = UsersAccusationOtherRequest_FieldNumber_OtherId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersAccusationOtherRequest__storage_, otherId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersAccusationOtherRequest class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersAccusationOtherRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UsersAccusationOtherResponse

@implementation UsersAccusationOtherResponse

@dynamic result;
@dynamic message;

typedef struct UsersAccusationOtherResponse__storage_ {
  uint32_t _has_storage_[1];
  Result result;
  NSString *message;
} UsersAccusationOtherResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = Result_EnumDescriptor,
        .number = UsersAccusationOtherResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UsersAccusationOtherResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UsersAccusationOtherResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UsersAccusationOtherResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UsersAccusationOtherResponse class]
                                     rootClass:[UsersRoot class]
                                          file:UsersRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UsersAccusationOtherResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UsersAccusationOtherResponse_Result_RawValue(UsersAccusationOtherResponse *message) {
  GPBDescriptor *descriptor = [UsersAccusationOtherResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAccusationOtherResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetUsersAccusationOtherResponse_Result_RawValue(UsersAccusationOtherResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [UsersAccusationOtherResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UsersAccusationOtherResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
